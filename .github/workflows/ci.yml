name: CI Pipeline

on:
  push:
    branches: [main, 'feat/**', 'fix/**']
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint & Test (Python ${{ matrix.python-version }})
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            dev-requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Run Ruff (lint)
        run: ruff check .
        continue-on-error: false

      - name: Run Black (format check)
        run: black --check .
        continue-on-error: false

      - name: Run isort (import check)
        run: isort --check-only .
        continue-on-error: false

      - name: Run tests
        run: pytest -q --tb=short

      - name: Upload coverage to Codecov (optional)
        if: false  # Disabled for Step 2; enable when coverage matters
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # Future: Add build/packaging step
  # build:
  #   name: Build Executable
  #   runs-on: windows-latest
  #   needs: lint-and-test
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Build with PyInstaller
  #       run: pyinstaller podstudio.spec
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: PODStudio-Windows
  #         path: dist/PODStudio.exe
